{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\n\nfunction groceryReducer(state = [], action) {\n  console.log(\"state\", state, \"action\", action);\n\n  switch (action.type) {\n    case actionTypes.ADD_GROCERY:\n      // const existingGrocery = state.filter(\n      //   (el) => el.value === action.value.value\n      // );\n      // return existingGrocery.length\n      //   ? [...state, { ...existingGrocery, qty: existingGrocery[0].qty++ }]\n      //   : [...state, action.value];\n      const newState = state.map(el => {\n        if (el.value === action.value.value) {\n          return { ...el,\n            qty: el.qty++\n          };\n        }\n      });\n\n    case actionTypes.REMOVE_GROCERY:\n      return state.filter(el => el.value !== action.value);\n\n    case actionTypes.CLEAR_GROCERY_LIST:\n      return state = [];\n\n    default:\n      return state;\n  }\n}\n\nexport default groceryReducer;","map":{"version":3,"sources":["/media/sanket/Study+Projects/PESTO/Assignement/grocery/src/store/groceryReducer.js"],"names":["actionTypes","groceryReducer","state","action","console","log","type","ADD_GROCERY","newState","map","el","value","qty","REMOVE_GROCERY","filter","CLEAR_GROCERY_LIST"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;;AACA,SAASC,cAAT,CAAwBC,KAAK,GAAG,EAAhC,EAAoCC,MAApC,EAA4C;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,KAArB,EAA4B,QAA5B,EAAsCC,MAAtC;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAKN,WAAW,CAACO,WAAjB;AACE;AACA;AACA;AACA;AACA;AACA;AACA,YAAMC,QAAQ,GAAGN,KAAK,CAACO,GAAN,CAAWC,EAAD,IAAQ;AACjC,YAAIA,EAAE,CAACC,KAAH,KAAaR,MAAM,CAACQ,KAAP,CAAaA,KAA9B,EAAqC;AACnC,iBAAO,EAAE,GAAGD,EAAL;AAASE,YAAAA,GAAG,EAAEF,EAAE,CAACE,GAAH;AAAd,WAAP;AACD;AACF,OAJgB,CAAjB;;AAKF,SAAKZ,WAAW,CAACa,cAAjB;AACE,aAAOX,KAAK,CAACY,MAAN,CAAcJ,EAAD,IAAQA,EAAE,CAACC,KAAH,KAAaR,MAAM,CAACQ,KAAzC,CAAP;;AACF,SAAKX,WAAW,CAACe,kBAAjB;AACE,aAAQb,KAAK,GAAG,EAAhB;;AACF;AACE,aAAOA,KAAP;AAlBJ;AAoBD;;AAED,eAAeD,cAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nfunction groceryReducer(state = [], action) {\n  console.log(\"state\", state, \"action\", action);\n  switch (action.type) {\n    case actionTypes.ADD_GROCERY:\n      // const existingGrocery = state.filter(\n      //   (el) => el.value === action.value.value\n      // );\n      // return existingGrocery.length\n      //   ? [...state, { ...existingGrocery, qty: existingGrocery[0].qty++ }]\n      //   : [...state, action.value];\n      const newState = state.map((el) => {\n        if (el.value === action.value.value) {\n          return { ...el, qty: el.qty++ };\n        }\n      });\n    case actionTypes.REMOVE_GROCERY:\n      return state.filter((el) => el.value !== action.value);\n    case actionTypes.CLEAR_GROCERY_LIST:\n      return (state = []);\n    default:\n      return state;\n  }\n}\n\nexport default groceryReducer;\n"]},"metadata":{},"sourceType":"module"}