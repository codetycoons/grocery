{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\n\nfunction groceryReducer(state = [], action) {\n  console.log(\"state\", state, \"action\", action);\n\n  switch (action.type) {\n    case actionTypes.ADD_GROCERY:\n      // const newState = state.map((el) => {\n      //   if (el.value === action.value.value) {\n      //     return { ...el, qty: el.qty++ };\n      //   } else {\n      //     return el;\n      //   }\n      // });\n      const existingGrocery = state.filter(el => el.value === action.value.value);\n      console.log(\"existingGrocery\", existingGrocery);\n      return existingGrocery ? { ...existingGrocery,\n        qty: el.qty++\n      } : [...state, action.value];\n      return newState;\n    // return [...state, action.value];\n\n    case actionTypes.CLEAR_GROCERY_LIST:\n      return state = [];\n\n    default:\n      return state;\n  }\n}\n\nexport default groceryReducer;","map":{"version":3,"sources":["/media/sanket/Study+Projects/PESTO/Assignement/grocery/src/store/groceryReducer.js"],"names":["actionTypes","groceryReducer","state","action","console","log","type","ADD_GROCERY","existingGrocery","filter","el","value","qty","newState","CLEAR_GROCERY_LIST"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;;AACA,SAASC,cAAT,CAAwBC,KAAK,GAAG,EAAhC,EAAoCC,MAApC,EAA4C;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,KAArB,EAA4B,QAA5B,EAAsCC,MAAtC;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAKN,WAAW,CAACO,WAAjB;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAMC,eAAe,GAAGN,KAAK,CAACO,MAAN,CACrBC,EAAD,IAAQA,EAAE,CAACC,KAAH,KAAaR,MAAM,CAACQ,KAAP,CAAaA,KADZ,CAAxB;AAGAP,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BG,eAA/B;AACA,aAAOA,eAAe,GAClB,EAAE,GAAGA,eAAL;AAAsBI,QAAAA,GAAG,EAAEF,EAAE,CAACE,GAAH;AAA3B,OADkB,GAElB,CAAC,GAAGV,KAAJ,EAAWC,MAAM,CAACQ,KAAlB,CAFJ;AAGA,aAAOE,QAAP;AACF;;AACA,SAAKb,WAAW,CAACc,kBAAjB;AACE,aAAQZ,KAAK,GAAG,EAAhB;;AACF;AACE,aAAOA,KAAP;AArBJ;AAuBD;;AAED,eAAeD,cAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nfunction groceryReducer(state = [], action) {\n  console.log(\"state\", state, \"action\", action);\n  switch (action.type) {\n    case actionTypes.ADD_GROCERY:\n      // const newState = state.map((el) => {\n      //   if (el.value === action.value.value) {\n      //     return { ...el, qty: el.qty++ };\n      //   } else {\n      //     return el;\n      //   }\n      // });\n      const existingGrocery = state.filter(\n        (el) => el.value === action.value.value\n      );\n      console.log(\"existingGrocery\", existingGrocery);\n      return existingGrocery\n        ? { ...existingGrocery, qty: el.qty++ }\n        : [...state, action.value];\n      return newState;\n    // return [...state, action.value];\n    case actionTypes.CLEAR_GROCERY_LIST:\n      return (state = []);\n    default:\n      return state;\n  }\n}\n\nexport default groceryReducer;\n"]},"metadata":{},"sourceType":"module"}