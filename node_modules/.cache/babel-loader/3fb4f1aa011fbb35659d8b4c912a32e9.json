{"ast":null,"code":"var _jsxFileName = \"/media/sanket/Study+Projects/PESTO/Assignement/grocery/src/Container/GroceryList/GroceryList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ClearGroceryList, RemoveGrocery, EditGrocery, PurchaseGrocery } from \"../../actions\";\nimport EditGroceryItem from \"../../Component/EditGroceryItem/EditGroceryItem\";\nimport GroceryItem from \"../../Component/GroceryItem/GroceryItem\";\nimport SearchGroceryItem from \"../SearchGroceryItem/SearchGroceryItem\";\nimport classes from \"./GroceryList.module.scss\";\nimport search from \"../../assets/search.png\";\nimport { debounce } from \"../../utils/utils\"; // function SearchGroceryInput() {\n//   const [searchValue, setsearchValue] = useState(\"\");\n//   const [showSearchInput, setShowSearchInput] = useState(false);\n//   const [searchList, setSearchList] = useState([]);\n//   const state = useSelector((state) => state);\n//   return (\n//     <div className={classes.SearchGroceryInput}>\n//       {showSearchInput && (\n//         <input\n//           className={showSearchInput ? `${classes.width_full}` : \"\"}\n//           type=\"text\"\n//           value={searchValue}\n//           onChange={(event) => {\n//             setsearchValue(event.target.value);\n//             debounce(() =>\n//               setSearchList(searchGrocery(state, event.target.value), 1000)\n//             );\n//           }}\n//         />\n//       )}\n//       <img\n//         src={search}\n//         onClick={() => {\n//           setShowSearchInput(!showSearchInput);\n//           setsearchValue(\"\");\n//         }}\n//       />\n//     </div>\n//   );\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GroceryList() {\n  _s();\n\n  const groceryState = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const clearGroceryList = () => dispatch(ClearGroceryList());\n\n  const removeGroceryFromList = grocery => dispatch(RemoveGrocery(grocery));\n\n  const editGroceryFromList = (id, grocery) => dispatch(EditGrocery(id, grocery));\n\n  const purchaseGrocery = id => dispatch(PurchaseGrocery(id));\n\n  console.log(\"groceryState\", groceryState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.GroceryList,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.grocery_list_wrapper,\n      children: [groceryState.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(SearchGroceryItem, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => clearGroceryList(),\n          children: \"Clear List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), groceryState.length === 0 && /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Grocery List is empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), groceryState.map((el, index) => {\n        return /*#__PURE__*/_jsxDEV(GroceryItem, {\n          item: el,\n          dispatchRemoveGrocery: removeGroceryFromList,\n          dispatchEdiGrocery: editGroceryFromList,\n          dispatchPurchaseGrocery: purchaseGrocery\n        }, el.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this);\n      }), searchList.length > 0 && searchList.map((el, index) => {\n        return /*#__PURE__*/_jsxDEV(GroceryItem, {\n          item: el,\n          dispatchRemoveGrocery: removeGroceryFromList,\n          dispatchEdiGrocery: editGroceryFromList,\n          dispatchPurchaseGrocery: purchaseGrocery\n        }, el.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GroceryList, \"4qHMpfeVTAioumTaaI3dCfuOoMM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = GroceryList;\nexport default GroceryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroceryList\");","map":{"version":3,"sources":["/media/sanket/Study+Projects/PESTO/Assignement/grocery/src/Container/GroceryList/GroceryList.js"],"names":["React","useState","useSelector","useDispatch","ClearGroceryList","RemoveGrocery","EditGrocery","PurchaseGrocery","EditGroceryItem","GroceryItem","SearchGroceryItem","classes","search","debounce","GroceryList","groceryState","state","dispatch","clearGroceryList","removeGroceryFromList","grocery","editGroceryFromList","id","purchaseGrocery","console","log","grocery_list_wrapper","length","actions","textAlign","map","el","index","searchList"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  ClearGroceryList,\n  RemoveGrocery,\n  EditGrocery,\n  PurchaseGrocery,\n} from \"../../actions\";\nimport EditGroceryItem from \"../../Component/EditGroceryItem/EditGroceryItem\";\nimport GroceryItem from \"../../Component/GroceryItem/GroceryItem\";\nimport SearchGroceryItem from \"../SearchGroceryItem/SearchGroceryItem\";\nimport classes from \"./GroceryList.module.scss\";\nimport search from \"../../assets/search.png\";\nimport { debounce } from \"../../utils/utils\";\n\n// function SearchGroceryInput() {\n//   const [searchValue, setsearchValue] = useState(\"\");\n//   const [showSearchInput, setShowSearchInput] = useState(false);\n//   const [searchList, setSearchList] = useState([]);\n//   const state = useSelector((state) => state);\n\n//   return (\n//     <div className={classes.SearchGroceryInput}>\n//       {showSearchInput && (\n//         <input\n//           className={showSearchInput ? `${classes.width_full}` : \"\"}\n//           type=\"text\"\n//           value={searchValue}\n//           onChange={(event) => {\n//             setsearchValue(event.target.value);\n//             debounce(() =>\n//               setSearchList(searchGrocery(state, event.target.value), 1000)\n//             );\n//           }}\n//         />\n//       )}\n//       <img\n//         src={search}\n//         onClick={() => {\n//           setShowSearchInput(!showSearchInput);\n//           setsearchValue(\"\");\n//         }}\n//       />\n//     </div>\n//   );\n// }\n\nfunction GroceryList() {\n  const groceryState = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const clearGroceryList = () => dispatch(ClearGroceryList());\n  const removeGroceryFromList = (grocery) => dispatch(RemoveGrocery(grocery));\n  const editGroceryFromList = (id, grocery) =>\n    dispatch(EditGrocery(id, grocery));\n  const purchaseGrocery = (id) => dispatch(PurchaseGrocery(id));\n  console.log(\"groceryState\", groceryState);\n\n  return (\n    <div className={classes.GroceryList}>\n      <div className={classes.grocery_list_wrapper}>\n        {groceryState.length > 0 && (\n          <div className={classes.actions}>\n            <SearchGroceryItem />\n            <a onClick={() => clearGroceryList()}>Clear List</a>\n          </div>\n        )}\n        {groceryState.length === 0 && (\n          <h3 style={{ textAlign: \"center\" }}>Grocery List is empty.</h3>\n        )}\n        {groceryState.map((el, index) => {\n          return (\n            <GroceryItem\n              key={el.id}\n              item={el}\n              dispatchRemoveGrocery={removeGroceryFromList}\n              dispatchEdiGrocery={editGroceryFromList}\n              dispatchPurchaseGrocery={purchaseGrocery}\n            />\n          );\n        })}\n\n        {searchList.length > 0 &&\n          searchList.map((el, index) => {\n            return (\n              <GroceryItem\n                key={el.id}\n                item={el}\n                dispatchRemoveGrocery={removeGroceryFromList}\n                dispatchEdiGrocery={editGroceryFromList}\n                dispatchPurchaseGrocery={purchaseGrocery}\n              />\n            );\n          })}\n      </div>\n    </div>\n  );\n}\n\nexport default GroceryList;\n"]},"metadata":{},"sourceType":"module"}